name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Run lint in devcontainer
      uses: devcontainers/ci@v0.3
      with:
        runCmd: |
          cd /workspace
          python -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt
          ./venv/bin/pip install -r .devcontainer/requirements-override.txt
          ./venv/bin/pylint --rcfile ./pylint.rc pulp_manager/ || true

  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Run tests with coverage in devcontainer
      uses: devcontainers/ci@v0.3
      with:
        runCmd: |
          cd /workspace
          python -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt
          ./venv/bin/pip install -r .devcontainer/requirements-override.txt
          ./venv/bin/pip install pytest-cov
          ./venv/bin/pytest -v --cov=pulp_manager --cov-report=xml --cov-report=term-missing --junit-xml=pytest-results.xml

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          pytest-results.xml
          coverage.xml
        if-no-files-found: ignore

    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-make:
    name: Test with Make
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Run make test in devcontainer
      uses: devcontainers/ci@v0.3
      with:
        runCmd: |
          cd /workspace
          make t

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [lint, test, test-make]
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.lint.result }}" == "success" ]; then
          echo "✅ Linting passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Linting failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ Tests passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Tests failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.test-make.result }}" == "success" ]; then
          echo "✅ Make test passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Make test failed" >> $GITHUB_STEP_SUMMARY
        fi
