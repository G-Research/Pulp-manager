"""Initial tables

Revision ID: e3d52c58c4d9
Revises: 
Create Date: 2023-10-05 13:34:14.198498

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'e3d52c58c4d9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pulp_servers',
    sa.Column('name', sa.String(length=1024), nullable=False),
    sa.Column('repo_sync_health_rollup_id', sa.SmallInteger(), nullable=True),
    sa.Column('username', sa.String(length=25), nullable=False),
    sa.Column('vault_service_account_mount', sa.String(length=56), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='pulp_servers__unique__name')
    )
    op.create_index('pulp_servers__index__repo_sync_health_rollup_id', 'pulp_servers', ['repo_sync_health_rollup_id'], unique=False)
    op.create_table('repo_groups',
    sa.Column('name', sa.String(length=512), nullable=False),
    sa.Column('regex_include', sa.String(length=512), nullable=True),
    sa.Column('regex_exclude', sa.String(length=512), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='repo_groups__unique__name')
    )
    op.create_table('repos',
    sa.Column('name', sa.String(length=512), nullable=False),
    sa.Column('repo_type', sa.String(length=20), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='repos__unique__name')
    )
    op.create_index('repos__index__date_created', 'repos', ['date_created'], unique=False)
    op.create_index('repos__index__date_last_updated', 'repos', ['date_last_updated'], unique=False)
    op.create_index('repos__index__rpm_type', 'repos', ['repo_type'], unique=False)
    op.create_table('tasks',
    sa.Column('name', sa.String(length=1024), nullable=False),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('task_type_id', sa.SmallInteger(), nullable=False),
    sa.Column('task_args_str', mysql.LONGTEXT(), nullable=False),
    sa.Column('date_queued', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_started', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_finished', sa.DateTime(timezone=True), nullable=True),
    sa.Column('state_id', sa.SmallInteger(), nullable=False),
    sa.Column('worker_name', sa.String(length=256), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], name='tasks__fk__task_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('tasks__index__date_queued', 'tasks', ['date_queued'], unique=False)
    op.create_index('tasks__index__date_started', 'tasks', ['date_started'], unique=False)
    op.create_index('tasks__index__state_id', 'tasks', ['state_id'], unique=False)
    op.create_index('tasks__index__task_type_id', 'tasks', ['task_type_id'], unique=False)
    op.create_index('tasks__index__worker_name', 'tasks', ['worker_name'], unique=False)
    op.create_index('tasks__index_date_finished', 'tasks', ['date_finished'], unique=False)
    op.create_table('pulp_server_repo_groups',
    sa.Column('pulp_server_id', sa.Integer(), nullable=False),
    sa.Column('repo_group_id', sa.Integer(), nullable=False),
    sa.Column('schedule', sa.String(length=256), nullable=True),
    sa.Column('max_concurrent_syncs', sa.SmallInteger(), nullable=False),
    sa.Column('max_runtime', sa.String(length=10), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['pulp_server_id'], ['pulp_servers.id'], name='pulp_server_repo_groups__fk__pulp_server_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['repo_group_id'], ['repo_groups.id'], name='pulp_server_repo_groups__fk__repo_group_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pulp_server_id', 'repo_group_id')
    )
    op.create_table('pulp_server_repos',
    sa.Column('pulp_server_id', sa.Integer(), nullable=False),
    sa.Column('repo_id', sa.Integer(), nullable=False),
    sa.Column('repo_href', sa.TEXT(), nullable=False),
    sa.Column('remote_href', sa.TEXT(), nullable=True),
    sa.Column('remote_feed', sa.TEXT(), nullable=True),
    sa.Column('distribution_href', sa.TEXT(), nullable=True),
    sa.Column('repo_sync_health_id', sa.SmallInteger(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['pulp_server_id'], ['pulp_servers.id'], name='pulp_server_repos__fk__pulp_server_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['repo_id'], ['repos.id'], name='pulp_server_repos__fk__repo_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_unique_constraint('pulp_server_repos__unique__pulp_server_id__repo_id', 'pulp_server_repos', ['pulp_server_id', 'repo_id'])
    op.create_index('pulp_server_repos__index__repo_sync_health_id', 'pulp_server_repos', ['repo_sync_health_id'], unique=False)
    op.create_table('task_stages',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('detail_str', mysql.LONGTEXT(), nullable=True),
    sa.Column('error_str', mysql.LONGTEXT(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='task_stages__fk__task_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pulp_server_repo_tasks',
    sa.Column('pulp_server_repo_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['pulp_server_repo_id'], ['pulp_server_repos.id'], name='pulp_server_repo_tasks__fk__pulp_server_repo_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='pulp_server_repo_tasks__fk__task_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pulp_server_repo_id', 'task_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pulp_server_repo_tasks')
    op.drop_table('task_stages')
    op.drop_index('pulp_server_repos__index__repo_sync_health_id', table_name='pulp_server_repos')
    op.drop_table('pulp_server_repos')
    op.drop_table('pulp_server_repo_groups')
    op.drop_index('tasks__index_date_finished', table_name='tasks')
    op.drop_index('tasks__index__worker_name', table_name='tasks')
    op.drop_index('tasks__index__task_type_id', table_name='tasks')
    op.drop_index('tasks__index__state_id', table_name='tasks')
    op.drop_index('tasks__index__date_started', table_name='tasks')
    op.drop_index('tasks__index__date_queued', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('repos__index__rpm_type', table_name='repos')
    op.drop_index('repos__index__date_last_updated', table_name='repos')
    op.drop_index('repos__index__date_created', table_name='repos')
    op.drop_table('repos')
    op.drop_table('repo_groups')
    op.drop_index('pulp_servers__index__repo_sync_health_rollup_id', table_name='pulp_servers')
    op.drop_table('pulp_servers')
    # ### end Alembic commands ###
